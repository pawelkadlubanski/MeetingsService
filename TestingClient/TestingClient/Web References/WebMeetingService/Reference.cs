//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace TestingClient.WebMeetingService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebMeetingServiceSoap", Namespace="http://tempuri.org/")]
    public partial class WebMeetingService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback addMeetingOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllMeetingsListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMeetingsByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMeetingsByDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback addUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserByLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback signUpUserToMeetingOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserMeetingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMeetingParticipantsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebMeetingService() {
            this.Url = global::TestingClient.Properties.Settings.Default.TestingClient_WebMeetingService_WebMeetingService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event addMeetingCompletedEventHandler addMeetingCompleted;
        
        /// <remarks/>
        public event getAllMeetingsListCompletedEventHandler getAllMeetingsListCompleted;
        
        /// <remarks/>
        public event getMeetingsByNameCompletedEventHandler getMeetingsByNameCompleted;
        
        /// <remarks/>
        public event getMeetingsByDateCompletedEventHandler getMeetingsByDateCompleted;
        
        /// <remarks/>
        public event getAllUsersCompletedEventHandler getAllUsersCompleted;
        
        /// <remarks/>
        public event addUserCompletedEventHandler addUserCompleted;
        
        /// <remarks/>
        public event getUserByLoginCompletedEventHandler getUserByLoginCompleted;
        
        /// <remarks/>
        public event removeUserCompletedEventHandler removeUserCompleted;
        
        /// <remarks/>
        public event signUpUserToMeetingCompletedEventHandler signUpUserToMeetingCompleted;
        
        /// <remarks/>
        public event getUserMeetingsCompletedEventHandler getUserMeetingsCompleted;
        
        /// <remarks/>
        public event getMeetingParticipantsCompletedEventHandler getMeetingParticipantsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/addMeeting", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addMeeting(string name, string location, string date, int maxNumberOfParticipants) {
            this.Invoke("addMeeting", new object[] {
                        name,
                        location,
                        date,
                        maxNumberOfParticipants});
        }
        
        /// <remarks/>
        public void addMeetingAsync(string name, string location, string date, int maxNumberOfParticipants) {
            this.addMeetingAsync(name, location, date, maxNumberOfParticipants, null);
        }
        
        /// <remarks/>
        public void addMeetingAsync(string name, string location, string date, int maxNumberOfParticipants, object userState) {
            if ((this.addMeetingOperationCompleted == null)) {
                this.addMeetingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddMeetingOperationCompleted);
            }
            this.InvokeAsync("addMeeting", new object[] {
                        name,
                        location,
                        date,
                        maxNumberOfParticipants}, this.addMeetingOperationCompleted, userState);
        }
        
        private void OnaddMeetingOperationCompleted(object arg) {
            if ((this.addMeetingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addMeetingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllMeetingsList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Meeting[] getAllMeetingsList() {
            object[] results = this.Invoke("getAllMeetingsList", new object[0]);
            return ((Meeting[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllMeetingsListAsync() {
            this.getAllMeetingsListAsync(null);
        }
        
        /// <remarks/>
        public void getAllMeetingsListAsync(object userState) {
            if ((this.getAllMeetingsListOperationCompleted == null)) {
                this.getAllMeetingsListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllMeetingsListOperationCompleted);
            }
            this.InvokeAsync("getAllMeetingsList", new object[0], this.getAllMeetingsListOperationCompleted, userState);
        }
        
        private void OngetAllMeetingsListOperationCompleted(object arg) {
            if ((this.getAllMeetingsListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllMeetingsListCompleted(this, new getAllMeetingsListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getMeetingsByName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Meeting getMeetingsByName(string name) {
            object[] results = this.Invoke("getMeetingsByName", new object[] {
                        name});
            return ((Meeting)(results[0]));
        }
        
        /// <remarks/>
        public void getMeetingsByNameAsync(string name) {
            this.getMeetingsByNameAsync(name, null);
        }
        
        /// <remarks/>
        public void getMeetingsByNameAsync(string name, object userState) {
            if ((this.getMeetingsByNameOperationCompleted == null)) {
                this.getMeetingsByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMeetingsByNameOperationCompleted);
            }
            this.InvokeAsync("getMeetingsByName", new object[] {
                        name}, this.getMeetingsByNameOperationCompleted, userState);
        }
        
        private void OngetMeetingsByNameOperationCompleted(object arg) {
            if ((this.getMeetingsByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMeetingsByNameCompleted(this, new getMeetingsByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getMeetingsByDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Meeting[] getMeetingsByDate([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> startDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> endDate) {
            object[] results = this.Invoke("getMeetingsByDate", new object[] {
                        startDate,
                        endDate});
            return ((Meeting[])(results[0]));
        }
        
        /// <remarks/>
        public void getMeetingsByDateAsync(System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate) {
            this.getMeetingsByDateAsync(startDate, endDate, null);
        }
        
        /// <remarks/>
        public void getMeetingsByDateAsync(System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, object userState) {
            if ((this.getMeetingsByDateOperationCompleted == null)) {
                this.getMeetingsByDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMeetingsByDateOperationCompleted);
            }
            this.InvokeAsync("getMeetingsByDate", new object[] {
                        startDate,
                        endDate}, this.getMeetingsByDateOperationCompleted, userState);
        }
        
        private void OngetMeetingsByDateOperationCompleted(object arg) {
            if ((this.getMeetingsByDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMeetingsByDateCompleted(this, new getMeetingsByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllUsers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public User[] getAllUsers() {
            object[] results = this.Invoke("getAllUsers", new object[0]);
            return ((User[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllUsersAsync() {
            this.getAllUsersAsync(null);
        }
        
        /// <remarks/>
        public void getAllUsersAsync(object userState) {
            if ((this.getAllUsersOperationCompleted == null)) {
                this.getAllUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllUsersOperationCompleted);
            }
            this.InvokeAsync("getAllUsers", new object[0], this.getAllUsersOperationCompleted, userState);
        }
        
        private void OngetAllUsersOperationCompleted(object arg) {
            if ((this.getAllUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllUsersCompleted(this, new getAllUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/addUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addUser(string name, string surname, string login, string email) {
            this.Invoke("addUser", new object[] {
                        name,
                        surname,
                        login,
                        email});
        }
        
        /// <remarks/>
        public void addUserAsync(string name, string surname, string login, string email) {
            this.addUserAsync(name, surname, login, email, null);
        }
        
        /// <remarks/>
        public void addUserAsync(string name, string surname, string login, string email, object userState) {
            if ((this.addUserOperationCompleted == null)) {
                this.addUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddUserOperationCompleted);
            }
            this.InvokeAsync("addUser", new object[] {
                        name,
                        surname,
                        login,
                        email}, this.addUserOperationCompleted, userState);
        }
        
        private void OnaddUserOperationCompleted(object arg) {
            if ((this.addUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getUserByLogin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public User getUserByLogin(string login) {
            object[] results = this.Invoke("getUserByLogin", new object[] {
                        login});
            return ((User)(results[0]));
        }
        
        /// <remarks/>
        public void getUserByLoginAsync(string login) {
            this.getUserByLoginAsync(login, null);
        }
        
        /// <remarks/>
        public void getUserByLoginAsync(string login, object userState) {
            if ((this.getUserByLoginOperationCompleted == null)) {
                this.getUserByLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserByLoginOperationCompleted);
            }
            this.InvokeAsync("getUserByLogin", new object[] {
                        login}, this.getUserByLoginOperationCompleted, userState);
        }
        
        private void OngetUserByLoginOperationCompleted(object arg) {
            if ((this.getUserByLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserByLoginCompleted(this, new getUserByLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/removeUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void removeUser(string name) {
            this.Invoke("removeUser", new object[] {
                        name});
        }
        
        /// <remarks/>
        public void removeUserAsync(string name) {
            this.removeUserAsync(name, null);
        }
        
        /// <remarks/>
        public void removeUserAsync(string name, object userState) {
            if ((this.removeUserOperationCompleted == null)) {
                this.removeUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveUserOperationCompleted);
            }
            this.InvokeAsync("removeUser", new object[] {
                        name}, this.removeUserOperationCompleted, userState);
        }
        
        private void OnremoveUserOperationCompleted(object arg) {
            if ((this.removeUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/signUpUserToMeeting", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void signUpUserToMeeting(string login, string name) {
            this.Invoke("signUpUserToMeeting", new object[] {
                        login,
                        name});
        }
        
        /// <remarks/>
        public void signUpUserToMeetingAsync(string login, string name) {
            this.signUpUserToMeetingAsync(login, name, null);
        }
        
        /// <remarks/>
        public void signUpUserToMeetingAsync(string login, string name, object userState) {
            if ((this.signUpUserToMeetingOperationCompleted == null)) {
                this.signUpUserToMeetingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsignUpUserToMeetingOperationCompleted);
            }
            this.InvokeAsync("signUpUserToMeeting", new object[] {
                        login,
                        name}, this.signUpUserToMeetingOperationCompleted, userState);
        }
        
        private void OnsignUpUserToMeetingOperationCompleted(object arg) {
            if ((this.signUpUserToMeetingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.signUpUserToMeetingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getUserMeetings", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Meeting[] getUserMeetings(string userLogin) {
            object[] results = this.Invoke("getUserMeetings", new object[] {
                        userLogin});
            return ((Meeting[])(results[0]));
        }
        
        /// <remarks/>
        public void getUserMeetingsAsync(string userLogin) {
            this.getUserMeetingsAsync(userLogin, null);
        }
        
        /// <remarks/>
        public void getUserMeetingsAsync(string userLogin, object userState) {
            if ((this.getUserMeetingsOperationCompleted == null)) {
                this.getUserMeetingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserMeetingsOperationCompleted);
            }
            this.InvokeAsync("getUserMeetings", new object[] {
                        userLogin}, this.getUserMeetingsOperationCompleted, userState);
        }
        
        private void OngetUserMeetingsOperationCompleted(object arg) {
            if ((this.getUserMeetingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserMeetingsCompleted(this, new getUserMeetingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getMeetingParticipants", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public User[] getMeetingParticipants(string meetingName) {
            object[] results = this.Invoke("getMeetingParticipants", new object[] {
                        meetingName});
            return ((User[])(results[0]));
        }
        
        /// <remarks/>
        public void getMeetingParticipantsAsync(string meetingName) {
            this.getMeetingParticipantsAsync(meetingName, null);
        }
        
        /// <remarks/>
        public void getMeetingParticipantsAsync(string meetingName, object userState) {
            if ((this.getMeetingParticipantsOperationCompleted == null)) {
                this.getMeetingParticipantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMeetingParticipantsOperationCompleted);
            }
            this.InvokeAsync("getMeetingParticipants", new object[] {
                        meetingName}, this.getMeetingParticipantsOperationCompleted, userState);
        }
        
        private void OngetMeetingParticipantsOperationCompleted(object arg) {
            if ((this.getMeetingParticipantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMeetingParticipantsCompleted(this, new getMeetingParticipantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Meeting {
        
        private string nameField;
        
        private string locationField;
        
        private System.DateTime timeField;
        
        private int maxNumberOfParticipantsField;
        
        private int numberOfFreePlacesField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Time {
            get {
                return this.timeField;
            }
            set {
                this.timeField = value;
            }
        }
        
        /// <remarks/>
        public int MaxNumberOfParticipants {
            get {
                return this.maxNumberOfParticipantsField;
            }
            set {
                this.maxNumberOfParticipantsField = value;
            }
        }
        
        /// <remarks/>
        public int NumberOfFreePlaces {
            get {
                return this.numberOfFreePlacesField;
            }
            set {
                this.numberOfFreePlacesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class User {
        
        private string nameField;
        
        private string surnameField;
        
        private string loginField;
        
        private string emailField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Surname {
            get {
                return this.surnameField;
            }
            set {
                this.surnameField = value;
            }
        }
        
        /// <remarks/>
        public string Login {
            get {
                return this.loginField;
            }
            set {
                this.loginField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void addMeetingCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getAllMeetingsListCompletedEventHandler(object sender, getAllMeetingsListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllMeetingsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllMeetingsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Meeting[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Meeting[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getMeetingsByNameCompletedEventHandler(object sender, getMeetingsByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMeetingsByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMeetingsByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Meeting Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Meeting)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getMeetingsByDateCompletedEventHandler(object sender, getMeetingsByDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMeetingsByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMeetingsByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Meeting[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Meeting[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getAllUsersCompletedEventHandler(object sender, getAllUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void addUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getUserByLoginCompletedEventHandler(object sender, getUserByLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserByLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserByLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void removeUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void signUpUserToMeetingCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getUserMeetingsCompletedEventHandler(object sender, getUserMeetingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserMeetingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserMeetingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Meeting[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Meeting[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getMeetingParticipantsCompletedEventHandler(object sender, getMeetingParticipantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMeetingParticipantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMeetingParticipantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591